{
  "name": "Abtoast",
  "tagline": "ABToast is a simple A/B Testing app that is developed in Django.",
  "body": "# ABToast\r\n\r\nABToast is a simple A/B Testing app that is developed in django. This app implements the Django Session functionality to achieve the goal.\r\n\r\n### Installation\r\n\r\nABToast requires [Django](https://www.djangoproject.com/download/) to run.\r\n\r\nInstall ABToast from pip\r\n```sh\r\n$ pip install django-abtoast\r\n```\r\nOR, Get ABToast locally\r\n```sh\r\n$ git clone https://github.com/htadg/ABToast.git ABToast\r\n$ cd ABToast/\r\n$ python setup.py install\r\n```\r\n\r\nAdd ABToast to INSTALLED_APPS\r\n```python\r\nINSTALLED_APPS = (\r\n    # Django Default Apps\r\n    'django.contrib.admin',\r\n    '...',\r\n    # ABToast\r\n    'ABToast',\r\n)\r\n```\r\nAdd ABToast.middleware.ABMiddleware to the project middlewares\r\n```python\r\nMIDDLEWARE_CLASSES = (\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    '...',\r\n    # Custom Middleware\r\n    'ABToast.middleware.ABMiddleware',\r\n)\r\n```\r\nMigrate the database and create admin account\r\n```sh\r\n$ python manage.py makemigrations\r\n$ python manage.py migrate\r\n$ python manage.py createsuperuser\r\n```\r\nNow Create your own new Tests in the Database\r\n```\r\nNote: You can also create New Experiment and Tests from the Django Admin Panel\r\n```\r\n```python\r\nfrom datetime import datetime\r\nfrom dateutil.relativedelta import relativedelta\r\n\r\nfrom ABToast.models import Experiment, Test\r\n\r\n\r\n# Starting the Experiment from today\r\nstart_date = datetime.now()\r\n# End Date for the Experiment\r\n# Experiment runs for two months\r\nend_date = start_date + relativedelta(months=+2)\r\n\r\n# Initial Traffic Redirect for the first variant\r\ninitial_traffic = 50 # 50%\r\n\r\n# Create an Experiment\r\nexp = Experiment.objects.create(name=\"Homepage Test\", template_name=\"registrations/signup.html\", goal=\"registrations/success\", start=start_date, end=end_date, cancelled=False)\r\n\r\n# Create two variations of the homepage.\r\n# Currently User can only create two Test instances for a particular Experiment\r\n# which means currently user can run A/B Testing on only two variants of a Page\r\n# One Test for the original template\r\nTest.objects.create(template_name=\"registrations/signup.html\", experiment=exp)\r\n\r\n# Other Test for the New Variant\r\nTest.objects.create(template_name=\"registrations/new_signup.html\", experiment=exp)\r\n```\r\nNow You can run A/B Test on a view\r\n```python\r\ndef home(request, template_name=\"registrations/signup.html\"):\r\n    try:\r\n        template_name = request.ab.run(template_name)\r\n    except TemplateDoesNotExist:\r\n        pass\r\n    return render_to_response(template_name)\r\n```\r\n### Development\r\n\r\nWant to contribute? Great!\r\n\r\nDo the necessary changes that you feel and send a pull request.\r\n\r\n\r\n### Todos\r\n\r\n - [ ] Multivariate Testing\r\n - [ ] Add Graphical Information\r\n - [ ] Add Bayesian Formula for the Conversion Rates\r\n\r\nLicense\r\n----\r\n\r\nMIT\r\n\r\n**Free Software, Hell Yeah!**\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}